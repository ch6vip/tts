name: CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]

env:
  GO_VERSION: '1.24'

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: read
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Build binary
      env:
        GOOS: linux
        GOARCH: ${{ matrix.arch }}
      run: |
        go build -ldflags="-w -s" -o main ./cmd/api

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: binary-linux-${{ matrix.arch }}
        path: main